package com.wh.mybatis.bean;

import java.util.ArrayList;
import java.util.List;

public class EmployeeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table emp
     *
     * @mbg.generated Sun Apr 11 18:06:47 CST 2021
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table emp
     *
     * @mbg.generated Sun Apr 11 18:06:47 CST 2021
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table emp
     *
     * @mbg.generated Sun Apr 11 18:06:47 CST 2021
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emp
     *
     * @mbg.generated Sun Apr 11 18:06:47 CST 2021
     */
    public EmployeeExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emp
     *
     * @mbg.generated Sun Apr 11 18:06:47 CST 2021
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emp
     *
     * @mbg.generated Sun Apr 11 18:06:47 CST 2021
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emp
     *
     * @mbg.generated Sun Apr 11 18:06:47 CST 2021
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emp
     *
     * @mbg.generated Sun Apr 11 18:06:47 CST 2021
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emp
     *
     * @mbg.generated Sun Apr 11 18:06:47 CST 2021
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emp
     *
     * @mbg.generated Sun Apr 11 18:06:47 CST 2021
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emp
     *
     * @mbg.generated Sun Apr 11 18:06:47 CST 2021
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emp
     *
     * @mbg.generated Sun Apr 11 18:06:47 CST 2021
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emp
     *
     * @mbg.generated Sun Apr 11 18:06:47 CST 2021
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emp
     *
     * @mbg.generated Sun Apr 11 18:06:47 CST 2021
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table emp
     *
     * @mbg.generated Sun Apr 11 18:06:47 CST 2021
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andENameIsNull() {
            addCriterion("e_name is null");
            return (Criteria) this;
        }

        public Criteria andENameIsNotNull() {
            addCriterion("e_name is not null");
            return (Criteria) this;
        }

        public Criteria andENameEqualTo(String value) {
            addCriterion("e_name =", value, "eName");
            return (Criteria) this;
        }

        public Criteria andENameNotEqualTo(String value) {
            addCriterion("e_name <>", value, "eName");
            return (Criteria) this;
        }

        public Criteria andENameGreaterThan(String value) {
            addCriterion("e_name >", value, "eName");
            return (Criteria) this;
        }

        public Criteria andENameGreaterThanOrEqualTo(String value) {
            addCriterion("e_name >=", value, "eName");
            return (Criteria) this;
        }

        public Criteria andENameLessThan(String value) {
            addCriterion("e_name <", value, "eName");
            return (Criteria) this;
        }

        public Criteria andENameLessThanOrEqualTo(String value) {
            addCriterion("e_name <=", value, "eName");
            return (Criteria) this;
        }

        public Criteria andENameLike(String value) {
            addCriterion("e_name like", value, "eName");
            return (Criteria) this;
        }

        public Criteria andENameNotLike(String value) {
            addCriterion("e_name not like", value, "eName");
            return (Criteria) this;
        }

        public Criteria andENameIn(List<String> values) {
            addCriterion("e_name in", values, "eName");
            return (Criteria) this;
        }

        public Criteria andENameNotIn(List<String> values) {
            addCriterion("e_name not in", values, "eName");
            return (Criteria) this;
        }

        public Criteria andENameBetween(String value1, String value2) {
            addCriterion("e_name between", value1, value2, "eName");
            return (Criteria) this;
        }

        public Criteria andENameNotBetween(String value1, String value2) {
            addCriterion("e_name not between", value1, value2, "eName");
            return (Criteria) this;
        }

        public Criteria andEAgeIsNull() {
            addCriterion("e_age is null");
            return (Criteria) this;
        }

        public Criteria andEAgeIsNotNull() {
            addCriterion("e_age is not null");
            return (Criteria) this;
        }

        public Criteria andEAgeEqualTo(Integer value) {
            addCriterion("e_age =", value, "eAge");
            return (Criteria) this;
        }

        public Criteria andEAgeNotEqualTo(Integer value) {
            addCriterion("e_age <>", value, "eAge");
            return (Criteria) this;
        }

        public Criteria andEAgeGreaterThan(Integer value) {
            addCriterion("e_age >", value, "eAge");
            return (Criteria) this;
        }

        public Criteria andEAgeGreaterThanOrEqualTo(Integer value) {
            addCriterion("e_age >=", value, "eAge");
            return (Criteria) this;
        }

        public Criteria andEAgeLessThan(Integer value) {
            addCriterion("e_age <", value, "eAge");
            return (Criteria) this;
        }

        public Criteria andEAgeLessThanOrEqualTo(Integer value) {
            addCriterion("e_age <=", value, "eAge");
            return (Criteria) this;
        }

        public Criteria andEAgeIn(List<Integer> values) {
            addCriterion("e_age in", values, "eAge");
            return (Criteria) this;
        }

        public Criteria andEAgeNotIn(List<Integer> values) {
            addCriterion("e_age not in", values, "eAge");
            return (Criteria) this;
        }

        public Criteria andEAgeBetween(Integer value1, Integer value2) {
            addCriterion("e_age between", value1, value2, "eAge");
            return (Criteria) this;
        }

        public Criteria andEAgeNotBetween(Integer value1, Integer value2) {
            addCriterion("e_age not between", value1, value2, "eAge");
            return (Criteria) this;
        }

        public Criteria andESexIsNull() {
            addCriterion("e_sex is null");
            return (Criteria) this;
        }

        public Criteria andESexIsNotNull() {
            addCriterion("e_sex is not null");
            return (Criteria) this;
        }

        public Criteria andESexEqualTo(Integer value) {
            addCriterion("e_sex =", value, "eSex");
            return (Criteria) this;
        }

        public Criteria andESexNotEqualTo(Integer value) {
            addCriterion("e_sex <>", value, "eSex");
            return (Criteria) this;
        }

        public Criteria andESexGreaterThan(Integer value) {
            addCriterion("e_sex >", value, "eSex");
            return (Criteria) this;
        }

        public Criteria andESexGreaterThanOrEqualTo(Integer value) {
            addCriterion("e_sex >=", value, "eSex");
            return (Criteria) this;
        }

        public Criteria andESexLessThan(Integer value) {
            addCriterion("e_sex <", value, "eSex");
            return (Criteria) this;
        }

        public Criteria andESexLessThanOrEqualTo(Integer value) {
            addCriterion("e_sex <=", value, "eSex");
            return (Criteria) this;
        }

        public Criteria andESexIn(List<Integer> values) {
            addCriterion("e_sex in", values, "eSex");
            return (Criteria) this;
        }

        public Criteria andESexNotIn(List<Integer> values) {
            addCriterion("e_sex not in", values, "eSex");
            return (Criteria) this;
        }

        public Criteria andESexBetween(Integer value1, Integer value2) {
            addCriterion("e_sex between", value1, value2, "eSex");
            return (Criteria) this;
        }

        public Criteria andESexNotBetween(Integer value1, Integer value2) {
            addCriterion("e_sex not between", value1, value2, "eSex");
            return (Criteria) this;
        }

        public Criteria andEDepartmentIsNull() {
            addCriterion("e_department is null");
            return (Criteria) this;
        }

        public Criteria andEDepartmentIsNotNull() {
            addCriterion("e_department is not null");
            return (Criteria) this;
        }

        public Criteria andEDepartmentEqualTo(Integer value) {
            addCriterion("e_department =", value, "eDepartment");
            return (Criteria) this;
        }

        public Criteria andEDepartmentNotEqualTo(Integer value) {
            addCriterion("e_department <>", value, "eDepartment");
            return (Criteria) this;
        }

        public Criteria andEDepartmentGreaterThan(Integer value) {
            addCriterion("e_department >", value, "eDepartment");
            return (Criteria) this;
        }

        public Criteria andEDepartmentGreaterThanOrEqualTo(Integer value) {
            addCriterion("e_department >=", value, "eDepartment");
            return (Criteria) this;
        }

        public Criteria andEDepartmentLessThan(Integer value) {
            addCriterion("e_department <", value, "eDepartment");
            return (Criteria) this;
        }

        public Criteria andEDepartmentLessThanOrEqualTo(Integer value) {
            addCriterion("e_department <=", value, "eDepartment");
            return (Criteria) this;
        }

        public Criteria andEDepartmentIn(List<Integer> values) {
            addCriterion("e_department in", values, "eDepartment");
            return (Criteria) this;
        }

        public Criteria andEDepartmentNotIn(List<Integer> values) {
            addCriterion("e_department not in", values, "eDepartment");
            return (Criteria) this;
        }

        public Criteria andEDepartmentBetween(Integer value1, Integer value2) {
            addCriterion("e_department between", value1, value2, "eDepartment");
            return (Criteria) this;
        }

        public Criteria andEDepartmentNotBetween(Integer value1, Integer value2) {
            addCriterion("e_department not between", value1, value2, "eDepartment");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table emp
     *
     * @mbg.generated do_not_delete_during_merge Sun Apr 11 18:06:47 CST 2021
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table emp
     *
     * @mbg.generated Sun Apr 11 18:06:47 CST 2021
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}